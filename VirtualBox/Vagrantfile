Vagrant.configure("2") do |config|
  unless Vagrant.has_plugin?("vagrant-vbguest") # see Requirements
    system("vagrant plugin install vagrant-vbguest") 
  end

  # Firewall
  config.vm.define "firewall" do |firewall|
    firewall.vm.box = "ksklareski/pfsense-ce"
    firewall.vm.guest = :freebsd
    firewall.vm.provider "virtualbox" do |vb|
      vb.name = "Firewall"
      vb.cpus = 2
      vb.memory = 2048
      vb.gui = false
      vb.check_guest_additions = false
    end
    firewall.vm.network :private_network,
      name: "VirtualBox Host-Only Ethernet Adapter",
      ip: "192.168.5.254", 
      netmask: "255.255.255.0"
    firewall.vm.network "forwarded_port", guest: 80, host: 8888
    firewall.vm.communicator = "ssh"
    firewall.ssh.insert_key = $false # see Requirements
    firewall.ssh.shell = "sh"
    firewall.vm.hostname = "firewall"
    firewall.vm.provision "file", source: "Configuration-Files/Firewall.xml", destination: "/tmp/config.xml"
    firewall.vm.provision "shell", inline: "mv /tmp/config.xml /cf/conf/config.xml"
    firewall.vm.provision "shell", inline: "rm /tmp/config.cache"
  end

  # Domain Controller
  # config.vm.define "dc" do |dc|
  #   dc.vm.box = "salesforce/server2019"
  #   dc.vm.provider "virtualbox" do |vb|
  #     vb.name = "Domain-Controller"
  #     vb.cpus = 2
  #     vb.memory = 2048
  #     vb.gui = false
  #   end
  #   dc.vm.network :private_network, 
  #     name: "VirtualBox Host-Only Ethernet Adapter", 
  #     ip: "192.168.5.10", 
  #     netmask: "255.255.255.0"
  #   dc.vm.communicator = "winrm"
  #   dc.winrm.transport = "plaintext" # see Lab Requirements
  #   dc.winrm.basic_auth_only = true # see Lab Requirements
  #   dc.vm.hostname = "dc1"
  #   dc.vm.provision "shell", path: "Provisioning-Scripts/Domain-Controller/New-AdForest.ps1"
  #   dc.vm.provision "shell", reboot: true # see Lab Requirements
  #   dc.vm.provision "shell", path: "Provisioning-Scripts/Domain-Controller/Set-DnsServer.ps1"
  #   dc.vm.provision "shell", path: "Provisioning-Scripts/Domain-Controller/Wait-ForAllRequiredServicesToStart.ps1"
  #   dc.vm.provision "shell", path: "Provisioning-Scripts/Domain-Controller/New-AdDomainAdmin.ps1"
  #   dc.vm.provision "shell", path: "Provisioning-Scripts/Domain-Controller/New-AdUserSet.ps1"
  #   dc.vm.provision "shell", path: "Provisioning-Scripts/Domain-Controller/New-GpoWallpaper.ps1"
  #   dc.vm.provision "shell", path: "Provisioning-Scripts/Domain-Controller/New-GpoDomainControllerTaskbar.ps1"
  #   dc.vm.provision "shell", path: "Provisioning-Scripts/Domain-Controller/New-GpoAuditPolicy.ps1"
  #   dc.vm.provision "shell", path: "Provisioning-Scripts/Domain-Controller/New-GpoWindowsRemoteManagement.ps1"
  #   dc.vm.provision "shell", path: "Provisioning-Scripts/Domain-Controller/New-GpoWindowsEventForwarding.ps1"
  # end

  # Windows Event Collector (WEC) Server
  # config.vm.define "wec" do |wec|
  #   wec.vm.box = "salesforce/server2019"
  #   wec.vm.provider "virtualbox" do |vb|
  #     vb.name = "WEC-Server"
  #     vb.cpus = 2
  #     vb.memory = 2048
  #     vb.gui = false
  #   end
  #   wec.vm.network :private_network, 
  #     name: "VirtualBox Host-Only Ethernet Adapter", 
  #     ip: "192.168.5.12", 
  #     netmask: "255.255.255.0"
  #   wec.vm.communicator = "winrm"
  #   wec.winrm.transport = "plaintext" # see Lab Requirements
  #   wec.winrm.basic_auth_only = true # see Lab Requirements
  #   wec.vm.hostname = "wec1"
  #   wec.vm.provision "shell", path: "Provisioning-Scripts/WEC-Server/Set-DnsServer.ps1"
  #   wec.vm.provision "shell", path: "Provisioning-Scripts/WEC-Server/Join-Domain.ps1"
  #   wec.vm.provision "shell", reboot: true # see Lab Requirements
  # end

  # Member Server (Web Server, File Server)
  # config.vm.define "ms" do |ms|
  #   ms.vm.hostname = "ms1"
  #   ms.vm.box = "salesforce/server2019"
  #   ms.vm.provider "virtualbox" do |vb|
  #     vb.name = "Member-Server"
  #     vb.cpus = 1
  #     vb.memory = 1024
  #     vb.check_guest_additions = false
  #     vb.gui = true
  #   end
  #   ms.vm.network :private_network,
  #     name: "VirtualBox Host-Only Ethernet Adapter",
  #     ip: "192.168.5.11", 
  #     netmask: "255.255.255.0",
  #     gateway: "192.168.5.254",
  #     dns: "192.168.5.10"
  #   ms.vm.communicator = "winrm"
  # end

  # Workstation
  # config.vm.define "ws" do |ws|
  #   ws.vm.hostname = "ws1"
  #   ws.vm.box = "salesforce/server2019"
  #   ws.vm.provider "virtualbox" do |vb|
  #     vb.name = "Workstation"
  #     vb.cpus = 2
  #     vb.memory = 2048
  #     vb.check_guest_additions = false
  #     vb.gui = true
  #   end
  #   ws.vm.network :private_network,
  #     name: "VirtualBox Host-Only Ethernet Adapter",
  #     ip: "192.168.5.69", 
  #     netmask: "255.255.255.0",
  #     gateway: "192.168.5.254",
  #     dns: "192.168.5.10"
  #   ws.vm.communicator = "winrm"
  # end

  # Security Incident & Event Management (SIEM) Server
  # config.vm.define "siem" do |siem|
  #   siem.vm.hostname = "siem"
  #   siem.vm.box = "salesforce/server2019"
  #   siem.vm.provider "virtualbox" do |vb|
  #     vb.name = "SIEM-Server"
  #     vb.cpus = 2
  #     vb.memory = 2048
  #     vb.check_guest_additions = false
  #     vb.gui = true
  #   end
  #   siem.vm.network :private_network,
  #     name: "VirtualBox Host-Only Ethernet Adapter",
  #     ip: "192.168.5.100", 
  #     netmask: "255.255.255.0",
  #     gateway: "192.168.5.254",
  #     dns: "192.168.5.10"
  #   siem.vm.communicator = "ssh"
  # end

  # Adversary
  # config.vm.define "adversary" do |adversary|
  #   adversary.vm.hostname = "adversary"
  #   adversary.vm.box = "kalilinux/rolling"
  #   adversary.vm.provider "virtualbox" do |vb|
  #     vb.name = "Adversary"
  #     vb.cpus = 2
  #     vb.memory = 4096
  #     vb.check_guest_additions = false
  #     vb.gui = true
  #   end
  #   adversary.vm.network :private_network,
  #     name: "VirtualBox Host-Only Ethernet Adapter",
  #     ip: "192.168.5.86", 
  #     netmask: "255.255.255.0",
  #     gateway: "192.168.5.254",
  #     dns: "8.8.8.8"
  #   adversary.vm.communicator = "ssh"
  #   adversary.vm.provision "shell", path: "Provisioning-Scripts/Adversary/Set-Wallpaper.sh"
  # end
end